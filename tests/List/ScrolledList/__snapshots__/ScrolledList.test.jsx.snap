// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScrolledList DOM rendering renders correctly all item alignments 1`] = `
<div
  className="container "
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    >
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={true}
      >
        <div>
          1
        </div>
      </ItemContainer>
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={false}
      >
        <div>
          2
        </div>
      </ItemContainer>
    </div>
  </div>
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="left"
  />
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="right"
  />
</div>
`;

exports[`ScrolledList DOM rendering renders correctly all item alignments 2`] = `
<div
  className="container "
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    >
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={true}
      >
        <div>
          1
        </div>
      </ItemContainer>
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={false}
      >
        <div>
          2
        </div>
      </ItemContainer>
    </div>
  </div>
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="left"
  />
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="right"
  />
</div>
`;

exports[`ScrolledList DOM rendering renders correctly all item alignments 3`] = `
<div
  className="container "
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    >
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={true}
      >
        <div>
          1
        </div>
      </ItemContainer>
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={false}
      >
        <div>
          2
        </div>
      </ItemContainer>
    </div>
  </div>
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="left"
  />
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="right"
  />
</div>
`;

exports[`ScrolledList DOM rendering renders correctly all item alignments 4`] = `
<div
  className="container "
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    >
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={true}
      >
        <div>
          1
        </div>
      </ItemContainer>
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={false}
      >
        <div>
          2
        </div>
      </ItemContainer>
    </div>
  </div>
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="left"
  />
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="right"
  />
</div>
`;

exports[`ScrolledList DOM rendering renders correctly all item alignments 5`] = `
<div
  className="container "
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    >
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={true}
      >
        <div>
          1
        </div>
      </ItemContainer>
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={false}
      >
        <div>
          2
        </div>
      </ItemContainer>
    </div>
  </div>
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="left"
  />
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="right"
  />
</div>
`;

exports[`ScrolledList DOM rendering renders correctly custom ItemContainer 1`] = `
<div
  className="container "
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    >
      <div>
        <div>
          1
        </div>
      </div>
      <div>
        <div>
          2
        </div>
      </div>
    </div>
  </div>
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="left"
  />
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="right"
  />
</div>
`;

exports[`ScrolledList DOM rendering renders correctly in mobile mode with not known container width 1`] = `
<div
  className="container mobile-device"
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    >
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={true}
      >
        <div>
          1
        </div>
      </ItemContainer>
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={false}
      >
        <div>
          2
        </div>
      </ItemContainer>
    </div>
  </div>
</div>
`;

exports[`ScrolledList DOM rendering renders correctly with default props 1`] = `
<div
  className="container "
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    />
  </div>
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="left"
  />
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="right"
  />
</div>
`;

exports[`ScrolledList DOM rendering renders correctly with many child items 1`] = `
<div
  className="container "
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    >
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={true}
      >
        <div>
          1
        </div>
      </ItemContainer>
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={false}
      >
        <div>
          2
        </div>
      </ItemContainer>
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={false}
      >
        <div>
          3
        </div>
      </ItemContainer>
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={false}
      >
        <div>
          4
        </div>
      </ItemContainer>
    </div>
  </div>
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="left"
  />
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="right"
  />
</div>
`;

exports[`ScrolledList DOM rendering renders correctly with one child item 1`] = `
<div
  className="container "
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    >
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={true}
      >
        <div />
      </ItemContainer>
    </div>
  </div>
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="left"
  />
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="right"
  />
</div>
`;

exports[`ScrolledList DOM rendering renders correctly with selected item given arbitrary 1`] = `
<div
  className="container "
>
  <div
    className="eyeshot"
  >
    <div
      className="bar"
    >
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={false}
      >
        <div>
          1
        </div>
      </ItemContainer>
      <ItemContainer
        onClick={[Function]}
        onWidth={[Function]}
        selected={true}
      >
        <div>
          2
        </div>
      </ItemContainer>
    </div>
  </div>
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="left"
  />
  <ArrowButton
    backgroundColor={null}
    disabled={true}
    onClick={[Function]}
    type="right"
  />
</div>
`;
